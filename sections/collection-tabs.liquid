<div class="collection-switcher page-width">
  <ul class="collection-switcher__tabs">
    {% for block in section.blocks %}
      {% assign collection = collections[block.settings.collection_id] %}
      {% if collection %}
        <li
          class="collection-switcher__tab {% if forloop.first %}active{% endif %}"
          data-collection-handle="{{ collection.handle }}"
        >
          {{ collection.title }}
        </li>
      {% endif %}
    {% endfor %}
  </ul>
  <div class="collection-switcher__product-container">
    {% assign collection = collections[section.blocks[0].settings.collection_id] %}
    {% if collection %}
      {% for product in collection.products limit: 4 %}
        <div class="product-grid-item card-wrapper product-card-wrapper underline-links-hover">
          <img
            src="{{ product.featured_image.src | img_url: 'master' }}"
            alt="{{ product.title }}"
          >
          <div class="card-content">
            <div class="card__heading h5">
              <a href="{{ product.url }}" class="card__title card__title--link full-unstyled-link">
                {{- product.title -}}
              </a>
            </div>
            <div class="price">
              <span class="price-item price-item--regular">From {{ product.price_min | money }}</span>
            </div>
          </div>
        </div>
      {% endfor %}
    {% endif %}
  </div>
  <div class="collection-switcher__loading-state is-hidden">
    <div class="collection-switcher__loading-state-spinner"></div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const tabs = document.querySelectorAll('.collection-switcher__tab');
    const productContainer = document.querySelector('.collection-switcher__product-container');
    const loadingState = document.querySelector('.collection-switcher__loading-state');

    async function fetchCollection(collectionHandle) {
      try {
        const response = await fetch(`/collections/${collectionHandle}/products.json`);
        if (!response.ok) throw new Error('Network response was not ok');
        const data = await response.json();
        updateCollectionDisplay(data);
      } catch (error) {
        console.error('Error loading the collection:', error);
      } finally {
        toggleLoadingState(false);
      }
    }

    function updateCollectionDisplay(data) {
      productContainer.innerHTML = ''; // Clear existing products
      data.products.forEach((product) => {
        const productElement = document.createElement('div');
        productElement.className = 'product-grid-item card-wrapper product-card-wrapper underline-links-hover';
        productElement.innerHTML = `<img src="${product.images[0].src}" alt="${product.title}" />
                                      <div class="card-content">
                                        <div class="card__heading h5">
                                          <a href="/products/${
                                            product.handle
                                          }" class="card__title card__title--link full-unstyled-link">${product.title}
                                        </a>
                                        </div>
                                        <div class="price">
                                          <span class="price-item price-item--regular">From ${Math.min(
                                            ...product.variants.map((v) => v.price)
                                          )}</span>
                                        </div>
                                      </div>`;
        productContainer.appendChild(productElement);
      });
    }

    function toggleLoadingState(show) {
      loadingState.classList.toggle('is-hidden', !show);
      productContainer.classList.toggle('is-hidden', show);
    }

    tabs.forEach((tab) =>
      tab.addEventListener('click', () => {
        tabs.forEach((t) => t.classList.remove('active'));
        tab.classList.add('active');
        toggleLoadingState(true);
        fetchCollection(tab.getAttribute('data-collection-handle'));
      })
    );

    // Initialize by loading the first tab's collection
    if (tabs.length > 0) {
      //tabs[0].click();
    }
  });
</script>

<style>
  .collection-switcher {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    position: relative;
  }
  .collection-switcher__tabs {
    display: flex;
    gap: 1rem;
    padding: 0;
    list-style: none;
  }
  .collection-switcher__tab {
    cursor: pointer;
    padding: 0.5rem 1rem;
    border: 1px solid #000;
  }
  .collection-switcher__tab.active {
    background-color: #000;
    color: #fff;
  }
  .collection-switcher__product-container {
    display: grid;
    gap: 1rem;
    grid-template-columns: 1fr 1fr 1fr;
    transition: opacity 0.3s;
  }
  .collection-switcher__product-container .product-grid-item {
    display: grid;
    gap: 1rem;
  }
  .collection-switcher__product-container .product-grid-item img {
    width: 100%;
  }
  .collection-switcher__loading-state {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;
    min-height: 20rem;
    transition: opacity 0.3s;
    position: absolute;
  }
  .collection-switcher__loading-state-spinner {
    border: 6px solid rgba(0, 0, 0, 0.1);
    border-left-color: #000;
    border-radius: 50%;
    width: 4rem;
    height: 4rem;
    animation: spin 1s linear infinite;
    display: flex !important;
  }
  .collection-switcher__loading-state.is-hidden {
    opacity: 0;
    z-index: -1;
  }
  .collection-switcher__product-container.is-hidden {
    opacity: 0;
    z-index: -1;
  }
  @keyframes spin {
    to {
      transform: rotate(360deg);
    }
  }
</style>

{% schema %}
{
  "name": "Collection Tabs",
  "settings": [],
  "blocks": [
    {
      "type": "collection",
      "name": "Collection Block",
      "settings": [
        {
          "id": "collection_id",
          "type": "collection",
          "label": "Select Collection"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Collection Tabs",
      "category": "Collection"
    }
  ]
}
{% endschema %}
